[{"/Users/jayden/Documents/GitHub/ubereats-frontend/src/index.tsx":"1","/Users/jayden/Documents/GitHub/ubereats-frontend/src/apollo.ts":"2","/Users/jayden/Documents/GitHub/ubereats-frontend/src/reportWebVitals.ts":"3","/Users/jayden/Documents/GitHub/ubereats-frontend/src/App.tsx":"4","/Users/jayden/Documents/GitHub/ubereats-frontend/src/routers/logged-out-router.tsx":"5","/Users/jayden/Documents/GitHub/ubereats-frontend/src/pages/create-account.tsx":"6","/Users/jayden/Documents/GitHub/ubereats-frontend/src/pages/login.tsx":"7","/Users/jayden/Documents/GitHub/ubereats-frontend/src/components/form-error.tsx":"8","/Users/jayden/Documents/GitHub/ubereats-frontend/src/components/button.tsx":"9","/Users/jayden/Documents/GitHub/ubereats-frontend/src/__generated__/globalTypes.ts":"10","/Users/jayden/Documents/GitHub/ubereats-frontend/src/constants.ts":"11","/Users/jayden/Documents/GitHub/ubereats-frontend/src/routers/logged-in-router.tsx":"12","/Users/jayden/Documents/GitHub/ubereats-frontend/src/pages/404.tsx":"13","/Users/jayden/Documents/GitHub/ubereats-frontend/src/components/header.tsx":"14","/Users/jayden/Documents/GitHub/ubereats-frontend/src/pages/client/restaurants.tsx":"15","/Users/jayden/Documents/GitHub/ubereats-frontend/src/hooks/useMe.tsx":"16"},{"size":758,"mtime":1609133110120,"results":"17","hashOfConfig":"18"},{"size":977,"mtime":1609134644242,"results":"19","hashOfConfig":"18"},{"size":425,"mtime":1608821013862,"results":"20","hashOfConfig":"18"},{"size":399,"mtime":1609132409897,"results":"21","hashOfConfig":"18"},{"size":666,"mtime":1609138638070,"results":"22","hashOfConfig":"18"},{"size":5131,"mtime":1609138528940,"results":"23","hashOfConfig":"18"},{"size":4526,"mtime":1609132968051,"results":"24","hashOfConfig":"18"},{"size":234,"mtime":1609029786996,"results":"25","hashOfConfig":"18"},{"size":483,"mtime":1609056342606,"results":"26","hashOfConfig":"18"},{"size":706,"mtime":1609141690603,"results":"27","hashOfConfig":"18"},{"size":47,"mtime":1609132429855,"results":"28","hashOfConfig":"18"},{"size":903,"mtime":1609141649292,"results":"29","hashOfConfig":"18"},{"size":508,"mtime":1609138629154,"results":"30","hashOfConfig":"18"},{"size":842,"mtime":1609141513479,"results":"31","hashOfConfig":"18"},{"size":81,"mtime":1609138506005,"results":"32","hashOfConfig":"18"},{"size":319,"mtime":1609141555212,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"18f0r1h",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/jayden/Documents/GitHub/ubereats-frontend/src/index.tsx",[],["71","72"],"/Users/jayden/Documents/GitHub/ubereats-frontend/src/apollo.ts",[],"/Users/jayden/Documents/GitHub/ubereats-frontend/src/reportWebVitals.ts",[],"/Users/jayden/Documents/GitHub/ubereats-frontend/src/App.tsx",[],"/Users/jayden/Documents/GitHub/ubereats-frontend/src/routers/logged-out-router.tsx",[],"/Users/jayden/Documents/GitHub/ubereats-frontend/src/pages/create-account.tsx",["73","74"],"import { gql, useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { FormError } from \"../components/form-error\";\nimport uberLogo from '../images/eats-logo.svg';\nimport { Button } from \"../components/button\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet-async\";\nimport { UserRole } from \"../__generated__/globalTypes\";\nimport { createAccountMutation, createAccountMutationVariables } from \"../__generated__/createAccountMutation\";\n\nconst CREATE_ACCOUNT_MUTATION = gql`\nmutation createAccountMutation($createAccountInput: CreateAccountInput!) {\n    createAccount(input: $createAccountInput) {\n      ok\n      error\n    }\n  }\n`;\ninterface ICreateAccountForm {\n    email: string;\n    password: string;\n    role: UserRole;\n  }\n  \n  export const CreateAccount = () => {\n    const { register, \n            getValues,\n            errors, \n            handleSubmit, \n            formState \n        } = useForm<ICreateAccountForm>({\n        mode: 'onChange',\n        defaultValues: {\n            role: UserRole.Client,\n        },\n    });\n    const history = useHistory();\n    const onCompleted = (data: createAccountMutation) => {\n        const {\n            createAccount: { ok }\n        } = data;\n        if(ok){\n            history.push('/');\n        }\n    };\n    const [\n        createAccountMutation,\n        {loading, data: createAccountMutationResult},\n        ] = useMutation<createAccountMutation, createAccountMutationVariables>(\n            CREATE_ACCOUNT_MUTATION,\n            {\n                onCompleted,\n            });\n    const onSubmit = () => {\n        if(!loading){\n            const { email, password, role } = getValues();\n            createAccountMutation({\n                variables: {\n                    createAccountInput: { email, password, role}\n                }\n            });\n        }\n    };\n    return (\n        <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\n            <Helmet>\n                <title>Create Account | Uber Eats</title>\n            </Helmet>\n            <div className=\" w-full max-w-screen-sm flex flex-col px-5 items-center\">\n                <img src={uberLogo} className=\"w-52 mb-10\" alt=\"uberLogo\"/>\n                <h4 className=\"w-full font-medium text-left text-3xl mb-5\">\n                    Let's get started\n                </h4>\n                <form\n                onSubmit={handleSubmit(onSubmit)}\n                className=\"grid gap-3 mt-5 w-full mb-5\"\n                >\n                    <input\n                    ref={register({ \n                        required: \"Email is required\", \n                        pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/ \n                    })}\n                    name=\"email\"\n                    required\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    className=\"input\"\n                    />\n                    {errors.email?.message && (\n                    <FormError errorMessage={errors.email?.message} />\n                    )}\n                    {errors.email?.type === 'pattern' && (\n                        <FormError errorMessage={'Please enter a vaild email'} />\n                    )}\n                    <input\n                    ref={register({ required: \"Password is required\" })}\n                    required\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    className=\"input\"\n                    />\n                    {errors.password?.message && (\n                    <FormError errorMessage={errors.password?.message} />\n                    )}\n                    {errors.password?.type === \"minLength\" && (\n                    <FormError errorMessage=\"Password must be more than 10 chars.\" />\n                    )}\n                    <select\n                        name='role'\n                        ref={register({required: true})}\n                        className=\"input\"\n                    >\n                        {Object.keys(UserRole).map((role, index) => (\n                            <option key={index}>{role}</option>\n                        ))}\n                    </select>\n                    <Button \n                        canClick={formState.isValid}\n                        loading={loading}\n                        actionText={\"Create Account\"}\n                    />\n                    {createAccountMutationResult?.createAccount.error && (\n                        <FormError\n                            errorMessage={createAccountMutationResult.createAccount.error} />\n                    )}\n                </form>\n                <div>\n                    Already have an account?{\" \"}\n                    <Link to=\"/\" className=\" text-lime-600 hover:underline\">\n                        Login now\n                    </Link>\n                </div>\n            </div>\n        </div>\n        );\n    };","/Users/jayden/Documents/GitHub/ubereats-frontend/src/pages/login.tsx",["75","76"],"import { gql, useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { FormError } from \"../components/form-error\";\nimport {\n  loginMutation,\n  loginMutationVariables,\n} from \"../__generated__/loginMutation\";\nimport uberLogo from '../images/eats-logo.svg';\nimport { Button } from \"../components/button\";\nimport { Link } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet-async\";\nimport { authTokenVar, isLoggedInVar } from \"../apollo\";\nimport { LOCALSTORAGE_TOKEN } from \"../constants\";\n\nconst LOGIN_MUTATION = gql`\nmutation loginMutation($loginInput: LoginInput!) {\n    login(input: $loginInput) {\n      ok\n      token\n      error\n    }\n  }\n`;\ninterface ILoginForm {\n    email: string;\n    password: string;\n    resultError?: string;\n  }\n  \n  export const Login = () => {\n    const { register, getValues, errors, handleSubmit, formState } = useForm<ILoginForm>({\n        mode: 'onChange'\n    });\n    const onCompleted = (data: loginMutation) => {\n        const {\n          login: { ok, token },\n        } = data;\n        if (ok && token) {\n          localStorage.setItem(LOCALSTORAGE_TOKEN, token);\n          authTokenVar(token);\n          isLoggedInVar(true);\n        }\n      };\n    const [loginMutation, { data: loginMutationResult, loading }] = useMutation<\n    loginMutation,\n    loginMutationVariables\n    >(LOGIN_MUTATION, {\n        onCompleted,\n        });\n    const onSubmit = () => {\n    if(!loading){    \n        const { email, password } = getValues();\n        loginMutation({\n        variables: {\n            loginInput: {\n                email,\n                password,\n            },\n            },\n        });}\n    };\n    return (\n        <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\n            <Helmet>\n                <title>Login | Uber Eats</title>\n            </Helmet>\n            <div className=\" w-full max-w-screen-sm flex flex-col px-5 items-center\">\n                <img src={uberLogo} className=\"w-52 mb-10\" alt=\"uberLogo\"/>\n                <h4 className=\"w-full font-medium text-left text-3xl mb-5\">\n                    Welcome Back\n                </h4>\n                <h3 className=\"text-2xl text-gray-800\">Log In</h3>\n                <form\n                onSubmit={handleSubmit(onSubmit)}\n                className=\"grid gap-3 mt-5 w-full mb-5\"\n                >\n                    <input\n                    ref={register({ \n                        required: \"Email is required\", \n                        pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n                    })}\n                    name=\"email\"\n                    required\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    className=\"input\"\n                    />\n                    {errors.email?.message && (\n                    <FormError errorMessage={errors.email?.message} />\n                    )}\n                    {errors.email?.type === \"pattern\" && (\n                        <FormError errorMessage={'Please enter a valid email'} />\n                    )}\n                    <input\n                    ref={register({ required: \"Password is required\" })}\n                    required\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    className=\"input\"\n                    />\n                    {errors.password?.message && (\n                    <FormError errorMessage={errors.password?.message} />\n                    )}\n                    {errors.password?.type === \"minLength\" && (\n                    <FormError errorMessage=\"Password must be more than 10 chars.\" />\n                    )}\n                    <Button \n                        canClick={formState.isValid}\n                        loading={loading}\n                        actionText={\"Log in\"}\n                    />\n                    {loginMutationResult?.login.error && (\n                    <FormError errorMessage={loginMutationResult.login.error} />\n                    )}\n                </form>\n                <div>\n                    New to Uber?{\" \"}\n                    <Link to=\"/create-account\" className=\" text-lime-600 hover:underline\">\n                        Create an Account\n                    </Link>\n                </div>\n            </div>\n        </div>\n        );\n    };","/Users/jayden/Documents/GitHub/ubereats-frontend/src/components/form-error.tsx",[],["77","78"],"/Users/jayden/Documents/GitHub/ubereats-frontend/src/components/button.tsx",[],"/Users/jayden/Documents/GitHub/ubereats-frontend/src/__generated__/globalTypes.ts",[],"/Users/jayden/Documents/GitHub/ubereats-frontend/src/constants.ts",[],"/Users/jayden/Documents/GitHub/ubereats-frontend/src/routers/logged-in-router.tsx",[],"/Users/jayden/Documents/GitHub/ubereats-frontend/src/pages/404.tsx",[],"/Users/jayden/Documents/GitHub/ubereats-frontend/src/components/header.tsx",["79"],"import { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMe } from '../hooks/useMe';\nimport uberLogo from '../images/eats-logo.svg';\n\nexport const Header: React.FC = () => {\n    const { data } = useMe();\n    return (\n        <header className=\"py-4\">\n            <div className=\"w-full  px-5 xl:px-0 max-w-screen-xl mx-auto flex justify-between items-center\">\n                <img src={uberLogo} className=\"w-24\" alt=\"uberLogo\" />\n                <span className=\"text-xs\">\n                    <Link to=\"/my-profile\">\n                        <FontAwesomeIcon icon={faUser} className=\"text-xl\"/>\n                    </Link>\n                </span>\n            </div>\n        </header>\n    );\n};","/Users/jayden/Documents/GitHub/ubereats-frontend/src/pages/client/restaurants.tsx",[],"/Users/jayden/Documents/GitHub/ubereats-frontend/src/hooks/useMe.tsx",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":82,"column":44,"nodeType":"86","messageId":"87","endLine":82,"endColumn":45,"suggestions":"88"},{"ruleId":"84","severity":1,"message":"85","line":82,"column":69,"nodeType":"86","messageId":"87","endLine":82,"endColumn":70,"suggestions":"89"},{"ruleId":"84","severity":1,"message":"85","line":81,"column":44,"nodeType":"86","messageId":"87","endLine":81,"endColumn":45,"suggestions":"90"},{"ruleId":"84","severity":1,"message":"85","line":81,"column":69,"nodeType":"86","messageId":"87","endLine":81,"endColumn":70,"suggestions":"91"},{"ruleId":"80","replacedBy":"92"},{"ruleId":"82","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":9,"column":13,"nodeType":"96","messageId":"97","endLine":9,"endColumn":17},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["100","101"],["102","103"],["104","105"],["106","107"],["98"],["99"],"@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"messageId":"108","fix":"109","desc":"110"},{"messageId":"111","fix":"112","desc":"113"},{"messageId":"108","fix":"114","desc":"110"},{"messageId":"111","fix":"115","desc":"113"},{"messageId":"108","fix":"116","desc":"110"},{"messageId":"111","fix":"117","desc":"113"},{"messageId":"108","fix":"118","desc":"110"},{"messageId":"111","fix":"119","desc":"113"},"removeEscape",{"range":"120","text":"121"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"122","text":"123"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"124","text":"121"},{"range":"125","text":"123"},{"range":"126","text":"121"},{"range":"127","text":"123"},{"range":"128","text":"121"},{"range":"129","text":"123"},[2721,2722],"",[2721,2721],"\\",[2746,2747],[2746,2746],[2556,2557],[2556,2556],[2581,2582],[2581,2581]]