[{"/Users/jayden/Documents/GitHub/ubereats-frontend/src/index.tsx":"1","/Users/jayden/Documents/GitHub/ubereats-frontend/src/apollo.ts":"2","/Users/jayden/Documents/GitHub/ubereats-frontend/src/reportWebVitals.ts":"3","/Users/jayden/Documents/GitHub/ubereats-frontend/src/App.tsx":"4","/Users/jayden/Documents/GitHub/ubereats-frontend/src/routers/logged-out-router.tsx":"5","/Users/jayden/Documents/GitHub/ubereats-frontend/src/pages/create-account.tsx":"6","/Users/jayden/Documents/GitHub/ubereats-frontend/src/pages/login.tsx":"7"},{"size":653,"mtime":1608975146679,"results":"8","hashOfConfig":"9"},{"size":423,"mtime":1608882321475,"results":"10","hashOfConfig":"9"},{"size":425,"mtime":1608821013862,"results":"11","hashOfConfig":"9"},{"size":340,"mtime":1608974597270,"results":"12","hashOfConfig":"9"},{"size":537,"mtime":1608890674201,"results":"13","hashOfConfig":"9"},{"size":106,"mtime":1608889337305,"results":"14","hashOfConfig":"9"},{"size":2344,"mtime":1608977620890,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"18f0r1h",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/Users/jayden/Documents/GitHub/ubereats-frontend/src/index.tsx",[],["32","33"],"/Users/jayden/Documents/GitHub/ubereats-frontend/src/apollo.ts",[],"/Users/jayden/Documents/GitHub/ubereats-frontend/src/reportWebVitals.ts",[],"/Users/jayden/Documents/GitHub/ubereats-frontend/src/App.tsx",[],"/Users/jayden/Documents/GitHub/ubereats-frontend/src/routers/logged-out-router.tsx",[],"/Users/jayden/Documents/GitHub/ubereats-frontend/src/pages/create-account.tsx",[],"/Users/jayden/Documents/GitHub/ubereats-frontend/src/pages/login.tsx",["34"],"import React from 'react';\nimport { useForm } from 'react-hook-form';\n\ninterface ILoginForm {\n    email?: string;\n    password?: string;\n}\n\nexport const Login = () => {\n    const {register, getValues, errors, handleSubmit} = useForm<ILoginForm>();\n    const onSubmit = () => {};\n    return (\n        <div className=\"h-screen flex items-center justify-center bg-gray-800\">\n            <div className=\"bg-white w-full max-w-lg pt-10 pb-7 rounded-lg text-center\">\n                <h3 className=\"text-2xl text-gray-800\">Log In</h3>\n                <form \n                    onSubmit = {handleSubmit(onSubmit)}\n                    className=\"grid gap-3 mt-5 px-5\"\n                    >\n                    <input\n                        ref={register({required: 'Email is required'})}\n                        name=\"email\"\n                        required\n                        type='email'\n                        placeholder=\"Email\"\n                        className=\"input\"\n                    />\n                    {errors.email?.message && (\n                        <span className='font-medium text-red-500'>\n                            {errors.email?.message}\n                        </span>\n                    )}\n                    <input\n                        ref={register({required:'Password is required', minLength: 10})}\n                        required\n                        name='password'\n                        type='password'\n                        placeholder=\"Password\"\n                        className=\"input\"\n                    />\n                    {\n                        errors.password?.message && (\n                            <span className='font-medium text-red-500'>\n                                {errors.password?.message}\n                            </span>\n                        )\n                    }\n                    {\n                        errors.password?.type === 'minLength' && (\n                            <span className='font-medium text-red-500'>\n                                Password must be more than 10 chars.\n                            </span>\n                        )\n                    }\n                    <button className=\"mt-3 btn\">\n                        Log In\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n};",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":10,"column":22,"nodeType":"41","messageId":"42","endLine":10,"endColumn":31},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"@typescript-eslint/no-unused-vars","'getValues' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]